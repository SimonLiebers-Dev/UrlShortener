name: Build, Test, Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore UrlShortener.App.Backend/UrlShortener.App.Backend.csproj
      
    - name: Build Backend
      run: dotnet build UrlShortener.App.Backend/UrlShortener.App.Backend.csproj --configuration Release --no-restore

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore UrlShortener.App.Blazor/UrlShortener.App.Blazor/UrlShortener.App.Blazor.csproj

    - name: Build Frontend
      run: dotnet build UrlShortener.App.Blazor/UrlShortener.App.Blazor/UrlShortener.App.Blazor.csproj --configuration Release --no-restore

  test-backend:
    name: Test Application
    runs-on: ubuntu-latest
    needs: 
        - build-backend
        - build-frontend

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Setup .NET Coverage
      run: dotnet tool install --global dotnet-coverage

    - name: Setup SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Start SonarScanner
      run: dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /o:"${{ secrets.SONAR_ORGANIZATION }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

    - name: Run Tests
      run: dotnet build --no-incremental && dotnet-coverage collect 'dotnet test' -f XML -o 'coverage.xml'

    - name: Stop SonarScanner
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"