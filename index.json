{
  "api/UrlShortener.App.Backend.AppDbContext.html": {
    "href": "api/UrlShortener.App.Backend.AppDbContext.html",
    "title": "Class AppDbContext | UrlShortener",
    "summary": "Class AppDbContext Namespace UrlShortener.App.Backend Assembly UrlShortener.App.Backend.dll public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> Properties RedirectLogs public virtual DbSet<RedirectLog> RedirectLogs { get; set; } Property Value DbSet<RedirectLog> UrlMappings public virtual DbSet<UrlMapping> UrlMappings { get; set; } Property Value DbSet<UrlMapping> Users public virtual DbSet<User> Users { get; set; } Property Value DbSet<User> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples."
  },
  "api/UrlShortener.App.Backend.Business.IJwtTokenGenerator.html": {
    "href": "api/UrlShortener.App.Backend.Business.IJwtTokenGenerator.html",
    "title": "Interface IJwtTokenGenerator | UrlShortener",
    "summary": "Interface IJwtTokenGenerator Namespace UrlShortener.App.Backend.Business Assembly UrlShortener.App.Backend.dll public interface IJwtTokenGenerator Methods GenerateToken(string) Generates a JWT token for the given email. string GenerateToken(string email) Parameters email string Email Returns string JWT token"
  },
  "api/UrlShortener.App.Backend.Business.IMappingsService.html": {
    "href": "api/UrlShortener.App.Backend.Business.IMappingsService.html",
    "title": "Interface IMappingsService | UrlShortener",
    "summary": "Interface IMappingsService Namespace UrlShortener.App.Backend.Business Assembly UrlShortener.App.Backend.dll public interface IMappingsService Methods CreateMapping(string, string, string) Create a new mapping for a long URL Task<UrlMapping?> CreateMapping(string longUrl, string name, string email) Parameters longUrl string Long url name string Name of mapping email string Email of user Returns Task<UrlMapping> DeleteMapping(string, int) Delete a mapping of a user by its id Task<bool> DeleteMapping(string email, int mappingId) Parameters email string Email of the user mappingId int Id of the mapping Returns Task<bool> True, if it was successfully deleted GetMappingByPath(string) Get a mapping by its short url path Task<UrlMapping?> GetMappingByPath(string path) Parameters path string Path Returns Task<UrlMapping> UrlMapping with matching path GetMappingsByUser(string) Get all mappings of a user Task<List<UrlMapping>?> GetMappingsByUser(string email) Parameters email string Email of the user Returns Task<List<UrlMapping>> All mappings found"
  },
  "api/UrlShortener.App.Backend.Business.IRedirectLogService.html": {
    "href": "api/UrlShortener.App.Backend.Business.IRedirectLogService.html",
    "title": "Interface IRedirectLogService | UrlShortener",
    "summary": "Interface IRedirectLogService Namespace UrlShortener.App.Backend.Business Assembly UrlShortener.App.Backend.dll public interface IRedirectLogService Methods LogRedirectAsync(UrlMapping, UserAgentApiResponse?, string?, string?) Log a redirect Task LogRedirectAsync(UrlMapping urlMapping, UserAgentApiResponse? userAgentApiResponse, string? ipAddress, string? userAgent) Parameters urlMapping UrlMapping UrlMapping to create log for userAgentApiResponse UserAgentApiResponse User agent data of the user ipAddress string Ip address of the user userAgent string UserAgent of the users browser Returns Task"
  },
  "api/UrlShortener.App.Backend.Business.IUserAgentService.html": {
    "href": "api/UrlShortener.App.Backend.Business.IUserAgentService.html",
    "title": "Interface IUserAgentService | UrlShortener",
    "summary": "Interface IUserAgentService Namespace UrlShortener.App.Backend.Business Assembly UrlShortener.App.Backend.dll public interface IUserAgentService Methods GetUserAgentAsync(string) Get user agent information Task<UserAgentApiResponse?> GetUserAgentAsync(string userAgent) Parameters userAgent string UserAgent string from the users browser Returns Task<UserAgentApiResponse> Parsed data"
  },
  "api/UrlShortener.App.Backend.Business.html": {
    "href": "api/UrlShortener.App.Backend.Business.html",
    "title": "Namespace UrlShortener.App.Backend.Business | UrlShortener",
    "summary": "Namespace UrlShortener.App.Backend.Business Interfaces IJwtTokenGenerator IMappingsService IRedirectLogService IUserAgentService"
  },
  "api/UrlShortener.App.Backend.Controllers.AuthController.html": {
    "href": "api/UrlShortener.App.Backend.Controllers.AuthController.html",
    "title": "Class AuthController | UrlShortener",
    "summary": "Class AuthController Namespace UrlShortener.App.Backend.Controllers Assembly UrlShortener.App.Backend.dll [Route(\"api/auth\")] [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.Problem(string, string, int?, string, string, IDictionary<string, object>) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary, IDictionary<string, object>) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IJwtTokenGenerator, AppDbContext) public AuthController(IJwtTokenGenerator JwtTokenGenerator, AppDbContext DbContext) Parameters JwtTokenGenerator IJwtTokenGenerator DbContext AppDbContext Methods Login(LoginRequestDto) Login endpoint to authenticate a user and return a JWT token. [HttpPost(\"login\")] public IActionResult Login(LoginRequestDto request) Parameters request LoginRequestDto The login request containing email and password. Returns IActionResult A JWT token if authentication is successful, otherwise an Unauthorized error. Register(RegisterRequestDto) Register a new user. [HttpPost(\"register\")] public Task<IActionResult> Register(RegisterRequestDto request) Parameters request RegisterRequestDto The registration request containing email and password. Returns Task<IActionResult> Response indicating success or failure of registration."
  },
  "api/UrlShortener.App.Backend.Controllers.HealthCheckController.html": {
    "href": "api/UrlShortener.App.Backend.Controllers.HealthCheckController.html",
    "title": "Class HealthCheckController | UrlShortener",
    "summary": "Class HealthCheckController Namespace UrlShortener.App.Backend.Controllers Assembly UrlShortener.App.Backend.dll [ApiController] [Route(\"api/health\")] public class HealthCheckController : ControllerBase Inheritance object ControllerBase HealthCheckController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.Problem(string, string, int?, string, string, IDictionary<string, object>) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary, IDictionary<string, object>) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Get() [HttpGet] public IActionResult Get() Returns IActionResult"
  },
  "api/UrlShortener.App.Backend.Controllers.MappingsController.html": {
    "href": "api/UrlShortener.App.Backend.Controllers.MappingsController.html",
    "title": "Class MappingsController | UrlShortener",
    "summary": "Class MappingsController Namespace UrlShortener.App.Backend.Controllers Assembly UrlShortener.App.Backend.dll [ApiController] [Route(\"api/mappings\")] [Authorize] public class MappingsController : ControllerBase Inheritance object ControllerBase MappingsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.Problem(string, string, int?, string, string, IDictionary<string, object>) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary, IDictionary<string, object>) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MappingsController(IMappingsService) public MappingsController(IMappingsService MappingsService) Parameters MappingsService IMappingsService Methods CreateMapping(CreateMappingRequestDto) Creates a new URL mapping (shortens a URL). [HttpPost(\"create\")] public Task<IActionResult> CreateMapping(CreateMappingRequestDto createMappingRequest) Parameters createMappingRequest CreateMappingRequestDto Request containing the long URL and a name for the mapping. Returns Task<IActionResult> The shortened URL. DeleteMapping(int) Deletes a specific URL mapping. [HttpDelete(\"{mappingId}\")] public Task<IActionResult> DeleteMapping(int mappingId) Parameters mappingId int The ID of the mapping to delete. Returns Task<IActionResult> A success or failure message. GetMappings() Retrieves all URL mappings for the authenticated user. [HttpGet(\"all\")] public Task<IActionResult> GetMappings() Returns Task<IActionResult> A list of the user's URL mappings. GetStats() Retrieves user statistics, including total mappings and clicks. [HttpGet(\"stats\")] public Task<IActionResult> GetStats() Returns Task<IActionResult> User statistics."
  },
  "api/UrlShortener.App.Backend.Controllers.RedirectController.html": {
    "href": "api/UrlShortener.App.Backend.Controllers.RedirectController.html",
    "title": "Class RedirectController | UrlShortener",
    "summary": "Class RedirectController Namespace UrlShortener.App.Backend.Controllers Assembly UrlShortener.App.Backend.dll [ApiController] [Route(\"/\")] [AllowAnonymous] public class RedirectController : ControllerBase Inheritance object ControllerBase RedirectController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.Problem(string, string, int?, string, string, IDictionary<string, object>) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary, IDictionary<string, object>) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RedirectController(IMappingsService, IRedirectLogService, IUserAgentService) public RedirectController(IMappingsService MappingsService, IRedirectLogService RedirectLogService, IUserAgentService UserAgentService) Parameters MappingsService IMappingsService RedirectLogService IRedirectLogService UserAgentService IUserAgentService Methods RedirectToLongUrl(string) Redirects a short URL to its original long URL. [HttpGet(\"{path}\")] public Task<IActionResult> RedirectToLongUrl(string path) Parameters path string The short URL path. Returns Task<IActionResult> A redirect response to the original long URL."
  },
  "api/UrlShortener.App.Backend.Controllers.html": {
    "href": "api/UrlShortener.App.Backend.Controllers.html",
    "title": "Namespace UrlShortener.App.Backend.Controllers | UrlShortener",
    "summary": "Namespace UrlShortener.App.Backend.Controllers Classes AuthController HealthCheckController MappingsController RedirectController"
  },
  "api/UrlShortener.App.Backend.Middleware.DelayMiddleware.html": {
    "href": "api/UrlShortener.App.Backend.Middleware.DelayMiddleware.html",
    "title": "Class DelayMiddleware | UrlShortener",
    "summary": "Class DelayMiddleware Namespace UrlShortener.App.Backend.Middleware Assembly UrlShortener.App.Backend.dll Middleware to introduce a delay for authentication requests. public class DelayMiddleware : IMiddleware Inheritance object DelayMiddleware Implements IMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DelayMiddleware(ILogger<DelayMiddleware>) Middleware to introduce a delay for authentication requests. public DelayMiddleware(ILogger<DelayMiddleware> logger) Parameters logger ILogger<DelayMiddleware> Logger Methods InvokeAsync(HttpContext, RequestDelegate) Request handling method. public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters context HttpContext The HttpContext for the current request. next RequestDelegate The delegate representing the remaining middleware in the request pipeline. Returns Task A Task that represents the execution of this middleware."
  },
  "api/UrlShortener.App.Backend.Middleware.html": {
    "href": "api/UrlShortener.App.Backend.Middleware.html",
    "title": "Namespace UrlShortener.App.Backend.Middleware | UrlShortener",
    "summary": "Namespace UrlShortener.App.Backend.Middleware Classes DelayMiddleware Middleware to introduce a delay for authentication requests."
  },
  "api/UrlShortener.App.Backend.Migrations.InitialMigration.html": {
    "href": "api/UrlShortener.App.Backend.Migrations.InitialMigration.html",
    "title": "Class InitialMigration | UrlShortener",
    "summary": "Class InitialMigration Namespace UrlShortener.App.Backend.Migrations Assembly UrlShortener.App.Backend.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20250409151853_InitialMigration\")] public class InitialMigration : Migration Inheritance object Migration InitialMigration Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/UrlShortener.App.Backend.Migrations.html": {
    "href": "api/UrlShortener.App.Backend.Migrations.html",
    "title": "Namespace UrlShortener.App.Backend.Migrations | UrlShortener",
    "summary": "Namespace UrlShortener.App.Backend.Migrations Classes InitialMigration A base class inherited by each EF Core migration."
  },
  "api/UrlShortener.App.Backend.Models.UserAgentApiResponse.html": {
    "href": "api/UrlShortener.App.Backend.Models.UserAgentApiResponse.html",
    "title": "Class UserAgentApiResponse | UrlShortener",
    "summary": "Class UserAgentApiResponse Namespace UrlShortener.App.Backend.Models Assembly UrlShortener.App.Backend.dll public class UserAgentApiResponse Inheritance object UserAgentApiResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BrowserFamily [JsonPropertyName(\"browser_family\")] public string BrowserFamily { get; set; } Property Value string Client [JsonPropertyName(\"client\")] public UserAgentClient? Client { get; set; } Property Value UserAgentClient Device [JsonPropertyName(\"device\")] public UserAgentDevice? Device { get; set; } Property Value UserAgentDevice Os [JsonPropertyName(\"os\")] public UserAgentOs? Os { get; set; } Property Value UserAgentOs OsFamily [JsonPropertyName(\"os_family\")] public string OsFamily { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Backend.Models.UserAgentClient.html": {
    "href": "api/UrlShortener.App.Backend.Models.UserAgentClient.html",
    "title": "Class UserAgentClient | UrlShortener",
    "summary": "Class UserAgentClient Namespace UrlShortener.App.Backend.Models Assembly UrlShortener.App.Backend.dll public class UserAgentClient Inheritance object UserAgentClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Engine [JsonPropertyName(\"engine\")] public string Engine { get; set; } Property Value string EngineVersion [JsonPropertyName(\"engine_version\")] public string EngineVersion { get; set; } Property Value string Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Type [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string Version [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Backend.Models.UserAgentDevice.html": {
    "href": "api/UrlShortener.App.Backend.Models.UserAgentDevice.html",
    "title": "Class UserAgentDevice | UrlShortener",
    "summary": "Class UserAgentDevice Namespace UrlShortener.App.Backend.Models Assembly UrlShortener.App.Backend.dll public class UserAgentDevice Inheritance object UserAgentDevice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Brand [JsonPropertyName(\"brand\")] public string Brand { get; set; } Property Value string Model [JsonPropertyName(\"model\")] public string Model { get; set; } Property Value string Type [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Backend.Models.UserAgentOs.html": {
    "href": "api/UrlShortener.App.Backend.Models.UserAgentOs.html",
    "title": "Class UserAgentOs | UrlShortener",
    "summary": "Class UserAgentOs Namespace UrlShortener.App.Backend.Models Assembly UrlShortener.App.Backend.dll public class UserAgentOs Inheritance object UserAgentOs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Platform [JsonPropertyName(\"platform\")] public string Platform { get; set; } Property Value string Version [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Backend.Models.html": {
    "href": "api/UrlShortener.App.Backend.Models.html",
    "title": "Namespace UrlShortener.App.Backend.Models | UrlShortener",
    "summary": "Namespace UrlShortener.App.Backend.Models Classes UserAgentApiResponse UserAgentClient UserAgentDevice UserAgentOs"
  },
  "api/UrlShortener.App.Backend.Program.html": {
    "href": "api/UrlShortener.App.Backend.Program.html",
    "title": "Class Program | UrlShortener",
    "summary": "Class Program Namespace UrlShortener.App.Backend Assembly UrlShortener.App.Backend.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Program() protected Program() Methods Main(string[]) public static void Main(string[] args) Parameters args string[]"
  },
  "api/UrlShortener.App.Backend.html": {
    "href": "api/UrlShortener.App.Backend.html",
    "title": "Namespace UrlShortener.App.Backend | UrlShortener",
    "summary": "Namespace UrlShortener.App.Backend Classes AppDbContext Program"
  },
  "api/UrlShortener.App.Blazor.Client.Api.AuthApi.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Api.AuthApi.html",
    "title": "Class AuthApi | UrlShortener",
    "summary": "Class AuthApi Namespace UrlShortener.App.Blazor.Client.Api Assembly UrlShortener.App.Blazor.Client.dll public class AuthApi : IAuthApi Inheritance object AuthApi Implements IAuthApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthApi(HttpClient) public AuthApi(HttpClient HttpClient) Parameters HttpClient HttpClient Methods Login(string, string) public Task<string?> Login(string email, string password) Parameters email string password string Returns Task<string> Register(string, string) public Task<RegisterResponseDto?> Register(string email, string password) Parameters email string password string Returns Task<RegisterResponseDto>"
  },
  "api/UrlShortener.App.Blazor.Client.Api.IAuthApi.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Api.IAuthApi.html",
    "title": "Interface IAuthApi | UrlShortener",
    "summary": "Interface IAuthApi Namespace UrlShortener.App.Blazor.Client.Api Assembly UrlShortener.App.Blazor.Client.dll public interface IAuthApi Methods Login(string, string) Task<string?> Login(string email, string password) Parameters email string password string Returns Task<string> Register(string, string) Task<RegisterResponseDto?> Register(string email, string password) Parameters email string password string Returns Task<RegisterResponseDto>"
  },
  "api/UrlShortener.App.Blazor.Client.Api.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Api.html",
    "title": "Namespace UrlShortener.App.Blazor.Client.Api | UrlShortener",
    "summary": "Namespace UrlShortener.App.Blazor.Client.Api Classes AuthApi Interfaces IAuthApi"
  },
  "api/UrlShortener.App.Blazor.Client.Business.AppAuthenticationStateProvider.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.AppAuthenticationStateProvider.html",
    "title": "Class AppAuthenticationStateProvider | UrlShortener",
    "summary": "Class AppAuthenticationStateProvider Namespace UrlShortener.App.Blazor.Client.Business Assembly UrlShortener.App.Blazor.Client.dll public class AppAuthenticationStateProvider : AuthenticationStateProvider Inheritance object AuthenticationStateProvider AppAuthenticationStateProvider Inherited Members AuthenticationStateProvider.NotifyAuthenticationStateChanged(Task<AuthenticationState>) AuthenticationStateProvider.AuthenticationStateChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppAuthenticationStateProvider(IJSRuntime) public AppAuthenticationStateProvider(IJSRuntime JsRuntime) Parameters JsRuntime IJSRuntime Methods GetAuthenticationStateAsync() Asynchronously gets an AuthenticationState that describes the current user. public override Task<AuthenticationState> GetAuthenticationStateAsync() Returns Task<AuthenticationState> A task that, when resolved, gives an AuthenticationState instance that describes the current user. GetToken() public string? GetToken() Returns string MarkUserAsLoggedOut() public Task MarkUserAsLoggedOut() Returns Task TryMarkUserAsAuthenticated(string?) public Task TryMarkUserAsAuthenticated(string? token) Parameters token string Returns Task"
  },
  "api/UrlShortener.App.Blazor.Client.Business.AuthService.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.AuthService.html",
    "title": "Class AuthService | UrlShortener",
    "summary": "Class AuthService Namespace UrlShortener.App.Blazor.Client.Business Assembly UrlShortener.App.Blazor.Client.dll public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(IAuthApi, INotificationService, AuthenticationStateProvider, NavigationManager) public AuthService(IAuthApi AuthApi, INotificationService NotificationService, AuthenticationStateProvider AuthenticationStateProvider, NavigationManager NavigationManager) Parameters AuthApi IAuthApi NotificationService INotificationService AuthenticationStateProvider AuthenticationStateProvider NavigationManager NavigationManager Methods LoginAsync(string, string) public Task LoginAsync(string username, string password) Parameters username string password string Returns Task RegisterAsync(string, string) public Task RegisterAsync(string username, string password) Parameters username string password string Returns Task"
  },
  "api/UrlShortener.App.Blazor.Client.Business.BrowserTimeProvider.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.BrowserTimeProvider.html",
    "title": "Class BrowserTimeProvider | UrlShortener",
    "summary": "Class BrowserTimeProvider Namespace UrlShortener.App.Blazor.Client.Business Assembly UrlShortener.App.Blazor.Client.dll public class BrowserTimeProvider : TimeProvider Inheritance object TimeProvider BrowserTimeProvider Inherited Members TimeProvider.CreateTimer(TimerCallback, object, TimeSpan, TimeSpan) TimeProvider.GetElapsedTime(long) TimeProvider.GetElapsedTime(long, long) TimeProvider.GetLocalNow() TimeProvider.GetTimestamp() TimeProvider.GetUtcNow() TimeProvider.System TimeProvider.TimestampFrequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LocalTimeZone Gets a TimeZoneInfo object that represents the local time zone according to this TimeProvider's notion of time. public override TimeZoneInfo LocalTimeZone { get; } Property Value TimeZoneInfo Methods SetBrowserTimeZone(string) public virtual void SetBrowserTimeZone(string timeZone) Parameters timeZone string Events LocalTimeZoneChanged public event EventHandler? LocalTimeZoneChanged Event Type EventHandler"
  },
  "api/UrlShortener.App.Blazor.Client.Business.IAuthService.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.IAuthService.html",
    "title": "Interface IAuthService | UrlShortener",
    "summary": "Interface IAuthService Namespace UrlShortener.App.Blazor.Client.Business Assembly UrlShortener.App.Blazor.Client.dll public interface IAuthService Methods LoginAsync(string, string) Task LoginAsync(string username, string password) Parameters username string password string Returns Task RegisterAsync(string, string) Task RegisterAsync(string username, string password) Parameters username string password string Returns Task"
  },
  "api/UrlShortener.App.Blazor.Client.Business.IMappingsService.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.IMappingsService.html",
    "title": "Interface IMappingsService | UrlShortener",
    "summary": "Interface IMappingsService Namespace UrlShortener.App.Blazor.Client.Business Assembly UrlShortener.App.Blazor.Client.dll public interface IMappingsService Methods CreateMapping(string, string?) Task<CreateMappingResponseDto?> CreateMapping(string longUrl, string? name = null) Parameters longUrl string name string Returns Task<CreateMappingResponseDto> DeleteMapping(UrlMappingDto) Task<bool> DeleteMapping(UrlMappingDto mapping) Parameters mapping UrlMappingDto Returns Task<bool> GetMappings() Task<List<UrlMappingDto>?> GetMappings() Returns Task<List<UrlMappingDto>> GetStats() Task<UserStatsDto?> GetStats() Returns Task<UserStatsDto>"
  },
  "api/UrlShortener.App.Blazor.Client.Business.MappingsService.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.MappingsService.html",
    "title": "Class MappingsService | UrlShortener",
    "summary": "Class MappingsService Namespace UrlShortener.App.Blazor.Client.Business Assembly UrlShortener.App.Blazor.Client.dll public class MappingsService : IMappingsService Inheritance object MappingsService Implements IMappingsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MappingsService(HttpClient, AuthenticationStateProvider, NavigationManager) public MappingsService(HttpClient HttpClient, AuthenticationStateProvider AuthenticationStateProvider, NavigationManager NavigationManager) Parameters HttpClient HttpClient AuthenticationStateProvider AuthenticationStateProvider NavigationManager NavigationManager Methods CreateMapping(string, string?) public Task<CreateMappingResponseDto?> CreateMapping(string longUrl, string? name = null) Parameters longUrl string name string Returns Task<CreateMappingResponseDto> DeleteMapping(UrlMappingDto) public Task<bool> DeleteMapping(UrlMappingDto mapping) Parameters mapping UrlMappingDto Returns Task<bool> GetMappings() public Task<List<UrlMappingDto>?> GetMappings() Returns Task<List<UrlMappingDto>> GetStats() public Task<UserStatsDto?> GetStats() Returns Task<UserStatsDto>"
  },
  "api/UrlShortener.App.Blazor.Client.Business.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Business.html",
    "title": "Namespace UrlShortener.App.Blazor.Client.Business | UrlShortener",
    "summary": "Namespace UrlShortener.App.Blazor.Client.Business Classes AppAuthenticationStateProvider AuthService BrowserTimeProvider MappingsService Interfaces IAuthService IMappingsService"
  },
  "api/UrlShortener.App.Blazor.Client.Program.html": {
    "href": "api/UrlShortener.App.Blazor.Client.Program.html",
    "title": "Class Program | UrlShortener",
    "summary": "Class Program Namespace UrlShortener.App.Blazor.Client Assembly UrlShortener.App.Blazor.Client.dll public static class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/UrlShortener.App.Blazor.Client.html": {
    "href": "api/UrlShortener.App.Blazor.Client.html",
    "title": "Namespace UrlShortener.App.Blazor.Client | UrlShortener",
    "summary": "Namespace UrlShortener.App.Blazor.Client Classes Program"
  },
  "api/UrlShortener.App.Blazor.Program.html": {
    "href": "api/UrlShortener.App.Blazor.Program.html",
    "title": "Class Program | UrlShortener",
    "summary": "Class Program Namespace UrlShortener.App.Blazor Assembly UrlShortener.App.Blazor.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Program() protected Program() Methods Main(string[]) public static void Main(string[] args) Parameters args string[]"
  },
  "api/UrlShortener.App.Blazor.html": {
    "href": "api/UrlShortener.App.Blazor.html",
    "title": "Namespace UrlShortener.App.Blazor | UrlShortener",
    "summary": "Namespace UrlShortener.App.Blazor Classes Program"
  },
  "api/UrlShortener.App.Shared.Dto.CreateMappingRequestDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.CreateMappingRequestDto.html",
    "title": "Class CreateMappingRequestDto | UrlShortener",
    "summary": "Class CreateMappingRequestDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class CreateMappingRequestDto Inheritance object CreateMappingRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LongUrl [JsonPropertyName(\"long_url\")] public string LongUrl { get; set; } Property Value string Name [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.CreateMappingResponseDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.CreateMappingResponseDto.html",
    "title": "Class CreateMappingResponseDto | UrlShortener",
    "summary": "Class CreateMappingResponseDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class CreateMappingResponseDto Inheritance object CreateMappingResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ShortUrl [JsonPropertyName(\"short_url\")] public string ShortUrl { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.LoginRequestDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.LoginRequestDto.html",
    "title": "Class LoginRequestDto | UrlShortener",
    "summary": "Class LoginRequestDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class LoginRequestDto Inheritance object LoginRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [JsonPropertyName(\"email\")] public string Email { get; init; } Property Value string Password [JsonPropertyName(\"password\")] public string Password { get; init; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.LoginResponseDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.LoginResponseDto.html",
    "title": "Class LoginResponseDto | UrlShortener",
    "summary": "Class LoginResponseDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class LoginResponseDto Inheritance object LoginResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Token [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.RedirectLogDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.RedirectLogDto.html",
    "title": "Class RedirectLogDto | UrlShortener",
    "summary": "Class RedirectLogDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class RedirectLogDto Inheritance object RedirectLogDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessedAt [JsonPropertyName(\"accessed_at\")] public DateTime AccessedAt { get; set; } Property Value DateTime BrowserFamily [JsonPropertyName(\"browser_family\")] public string? BrowserFamily { get; set; } Property Value string ClientEngine [JsonPropertyName(\"client_engine\")] public string? ClientEngine { get; set; } Property Value string ClientName [JsonPropertyName(\"client_name\")] public string? ClientName { get; set; } Property Value string ClientType [JsonPropertyName(\"client_type\")] public string? ClientType { get; set; } Property Value string DeviceBrand [JsonPropertyName(\"device_brand\")] public string? DeviceBrand { get; set; } Property Value string DeviceModel [JsonPropertyName(\"device_model\")] public string? DeviceModel { get; set; } Property Value string DeviceType [JsonPropertyName(\"device_type\")] public string? DeviceType { get; set; } Property Value string Id [JsonPropertyName(\"id\")] public int Id { get; set; } Property Value int IpAddress [JsonPropertyName(\"ip_address\")] public string? IpAddress { get; set; } Property Value string OsFamily [JsonPropertyName(\"os_family\")] public string? OsFamily { get; set; } Property Value string OsName [JsonPropertyName(\"os_name\")] public string? OsName { get; set; } Property Value string OsVersion [JsonPropertyName(\"os_version\")] public string? OsVersion { get; set; } Property Value string UserAgent [JsonPropertyName(\"user_agent\")] public string? UserAgent { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.RegisterErrorType.html": {
    "href": "api/UrlShortener.App.Shared.Dto.RegisterErrorType.html",
    "title": "Enum RegisterErrorType | UrlShortener",
    "summary": "Enum RegisterErrorType Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public enum RegisterErrorType Fields EmailAlreadyExists = 2 MissingEmailOrPassword = 1 None = 0"
  },
  "api/UrlShortener.App.Shared.Dto.RegisterRequestDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.RegisterRequestDto.html",
    "title": "Class RegisterRequestDto | UrlShortener",
    "summary": "Class RegisterRequestDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class RegisterRequestDto Inheritance object RegisterRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [JsonPropertyName(\"email\")] public string Email { get; init; } Property Value string Password [JsonPropertyName(\"password\")] public string Password { get; init; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.RegisterResponseDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.RegisterResponseDto.html",
    "title": "Class RegisterResponseDto | UrlShortener",
    "summary": "Class RegisterResponseDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class RegisterResponseDto Inheritance object RegisterResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorType [JsonPropertyName(\"error_type\")] public RegisterErrorType ErrorType { get; set; } Property Value RegisterErrorType Success [JsonPropertyName(\"success\")] public bool Success { get; set; } Property Value bool"
  },
  "api/UrlShortener.App.Shared.Dto.UrlMappingDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.UrlMappingDto.html",
    "title": "Class UrlMappingDto | UrlShortener",
    "summary": "Class UrlMappingDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class UrlMappingDto Inheritance object UrlMappingDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CreatedAt [JsonPropertyName(\"created_at\")] public DateTime CreatedAt { get; set; } Property Value DateTime Id [JsonPropertyName(\"id\")] public int Id { get; set; } Property Value int LongUrl [JsonPropertyName(\"long_url\")] public string LongUrl { get; set; } Property Value string Name [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string RedirectLogs [JsonPropertyName(\"redirect_logs\")] public List<RedirectLogDto> RedirectLogs { get; set; } Property Value List<RedirectLogDto> ShortUrl [JsonPropertyName(\"short_url\")] public string ShortUrl { get; set; } Property Value string User [JsonPropertyName(\"user\")] public string? User { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.UserAgentClientDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.UserAgentClientDto.html",
    "title": "Class UserAgentClientDto | UrlShortener",
    "summary": "Class UserAgentClientDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class UserAgentClientDto Inheritance object UserAgentClientDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Engine [JsonPropertyName(\"engine\")] public string Engine { get; set; } Property Value string EngineVersion [JsonPropertyName(\"engine_version\")] public string EngineVersion { get; set; } Property Value string Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Type [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string Version [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.UserAgentDeviceDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.UserAgentDeviceDto.html",
    "title": "Class UserAgentDeviceDto | UrlShortener",
    "summary": "Class UserAgentDeviceDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class UserAgentDeviceDto Inheritance object UserAgentDeviceDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Brand [JsonPropertyName(\"brand\")] public string Brand { get; set; } Property Value string Model [JsonPropertyName(\"model\")] public string Model { get; set; } Property Value string Type [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.UserAgentInfoDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.UserAgentInfoDto.html",
    "title": "Class UserAgentInfoDto | UrlShortener",
    "summary": "Class UserAgentInfoDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class UserAgentInfoDto Inheritance object UserAgentInfoDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BrowserFamily [JsonPropertyName(\"browser_family\")] public string BrowserFamily { get; set; } Property Value string Client [JsonPropertyName(\"client\")] public UserAgentClientDto? Client { get; set; } Property Value UserAgentClientDto Device [JsonPropertyName(\"device\")] public UserAgentDeviceDto? Device { get; set; } Property Value UserAgentDeviceDto Os [JsonPropertyName(\"os\")] public UserAgentOsDto? Os { get; set; } Property Value UserAgentOsDto OsFamily [JsonPropertyName(\"os_family\")] public string OsFamily { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.UserAgentOsDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.UserAgentOsDto.html",
    "title": "Class UserAgentOsDto | UrlShortener",
    "summary": "Class UserAgentOsDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class UserAgentOsDto Inheritance object UserAgentOsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Platform [JsonPropertyName(\"platform\")] public string Platform { get; set; } Property Value string Version [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Dto.UserStatsDto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.UserStatsDto.html",
    "title": "Class UserStatsDto | UrlShortener",
    "summary": "Class UserStatsDto Namespace UrlShortener.App.Shared.Dto Assembly UrlShortener.App.Shared.dll public class UserStatsDto Inheritance object UserStatsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Clicks [JsonPropertyName(\"clicks\")] public int Clicks { get; set; } Property Value int Mappings [JsonPropertyName(\"mappings\")] public int Mappings { get; set; } Property Value int"
  },
  "api/UrlShortener.App.Shared.Dto.html": {
    "href": "api/UrlShortener.App.Shared.Dto.html",
    "title": "Namespace UrlShortener.App.Shared.Dto | UrlShortener",
    "summary": "Namespace UrlShortener.App.Shared.Dto Classes CreateMappingRequestDto CreateMappingResponseDto LoginRequestDto LoginResponseDto RedirectLogDto RegisterRequestDto RegisterResponseDto UrlMappingDto UserAgentClientDto UserAgentDeviceDto UserAgentInfoDto UserAgentOsDto UserStatsDto Enums RegisterErrorType"
  },
  "api/UrlShortener.App.Shared.Extensions.DtoExtensions.html": {
    "href": "api/UrlShortener.App.Shared.Extensions.DtoExtensions.html",
    "title": "Class DtoExtensions | UrlShortener",
    "summary": "Class DtoExtensions Namespace UrlShortener.App.Shared.Extensions Assembly UrlShortener.App.Shared.dll public static class DtoExtensions Inheritance object DtoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDto(RedirectLog) public static RedirectLogDto ToDto(this RedirectLog redirectLog) Parameters redirectLog RedirectLog Returns RedirectLogDto ToDto(UrlMapping, HttpRequest) public static UrlMappingDto ToDto(this UrlMapping urlMapping, HttpRequest httpRequest) Parameters urlMapping UrlMapping httpRequest HttpRequest Returns UrlMappingDto"
  },
  "api/UrlShortener.App.Shared.Extensions.html": {
    "href": "api/UrlShortener.App.Shared.Extensions.html",
    "title": "Namespace UrlShortener.App.Shared.Extensions | UrlShortener",
    "summary": "Namespace UrlShortener.App.Shared.Extensions Classes DtoExtensions"
  },
  "api/UrlShortener.App.Shared.Models.RedirectLog.html": {
    "href": "api/UrlShortener.App.Shared.Models.RedirectLog.html",
    "title": "Class RedirectLog | UrlShortener",
    "summary": "Class RedirectLog Namespace UrlShortener.App.Shared.Models Assembly UrlShortener.App.Shared.dll public class RedirectLog Inheritance object RedirectLog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods DtoExtensions.ToDto(RedirectLog) Properties AccessedAt public DateTime AccessedAt { get; set; } Property Value DateTime BrowserFamily public string? BrowserFamily { get; set; } Property Value string ClientEngine public string? ClientEngine { get; set; } Property Value string ClientName public string? ClientName { get; set; } Property Value string ClientType public string? ClientType { get; set; } Property Value string DeviceBrand public string? DeviceBrand { get; set; } Property Value string DeviceModel public string? DeviceModel { get; set; } Property Value string DeviceType public string? DeviceType { get; set; } Property Value string Id public int Id { get; set; } Property Value int IpAddress public string? IpAddress { get; set; } Property Value string OsFamily public string? OsFamily { get; set; } Property Value string OsName public string? OsName { get; set; } Property Value string OsVersion public string? OsVersion { get; set; } Property Value string UrlMapping public UrlMapping UrlMapping { get; set; } Property Value UrlMapping UrlMappingId public int UrlMappingId { get; set; } Property Value int UserAgent public string? UserAgent { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Models.UrlMapping.html": {
    "href": "api/UrlShortener.App.Shared.Models.UrlMapping.html",
    "title": "Class UrlMapping | UrlShortener",
    "summary": "Class UrlMapping Namespace UrlShortener.App.Shared.Models Assembly UrlShortener.App.Shared.dll public class UrlMapping Inheritance object UrlMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods DtoExtensions.ToDto(UrlMapping, HttpRequest) Properties CreatedAt public DateTime CreatedAt { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int LongUrl public string LongUrl { get; set; } Property Value string Name public string? Name { get; set; } Property Value string Path public string Path { get; set; } Property Value string RedirectLogs public List<RedirectLog> RedirectLogs { get; set; } Property Value List<RedirectLog> User public string? User { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Models.User.html": {
    "href": "api/UrlShortener.App.Shared.Models.User.html",
    "title": "Class User | UrlShortener",
    "summary": "Class User Namespace UrlShortener.App.Shared.Models Assembly UrlShortener.App.Shared.dll public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Id public int Id { get; set; } Property Value int PasswordHash public string PasswordHash { get; set; } Property Value string Salt public string Salt { get; set; } Property Value string"
  },
  "api/UrlShortener.App.Shared.Models.html": {
    "href": "api/UrlShortener.App.Shared.Models.html",
    "title": "Namespace UrlShortener.App.Shared.Models | UrlShortener",
    "summary": "Namespace UrlShortener.App.Shared.Models Classes RedirectLog UrlMapping User"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | UrlShortener",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "md/getting-started.html": {
    "href": "md/getting-started.html",
    "title": "Getting Started | UrlShortener",
    "summary": "Getting Started"
  },
  "md/introduction.html": {
    "href": "md/introduction.html",
    "title": "Introduction | UrlShortener",
    "summary": "Introduction"
  }
}