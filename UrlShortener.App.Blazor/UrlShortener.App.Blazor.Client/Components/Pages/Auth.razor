@page "/auth"

@layout RootLayout

@inject NavigationManager NavigationManager

@if (AuthType != null)
{
    @if (AuthType.Equals("login", StringComparison.InvariantCultureIgnoreCase))
    {
        <Login />
    }
    else if (AuthType.Equals("register", StringComparison.InvariantCultureIgnoreCase))
    {
        <Register />
    }
}

@code {
    [SupplyParameterFromQuery(Name = "type")]
    public string? AuthType { get; set; } = "login";

    private readonly string[] _validAuthTypes = new string[] { "login", "register" };
    private readonly string _defaultAuthType = "login";

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (!_validAuthTypes.Contains(AuthType, StringComparer.InvariantCultureIgnoreCase))
        {
            SetAuthType(_defaultAuthType);
        }
    }

    private void SetAuthType(string type)
    {
        NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameter("type", type));
    }
}
