using System.Net.Http.Json;
using System.Net;
using UrlShortener.App.Shared.Dto;
using UrlShortener.App.Shared.Models;
using UrlShortener.Test.End2End.Base;
using UrlShortener.Test.End2End.Data;

namespace UrlShortener.Test.End2End.Tests.PenTests
{
    [TestFixture]
    public class LoginPenTest : PlayWrightBackendTestBase
    {
        private HttpClient _httpClient;

        protected override List<User> TestUsers => TestData.GetDefaultTestUsers();

        [SetUp]
        public void Setup()
        {
            _httpClient = new HttpClient()
            {
                BaseAddress = new Uri(BackendTest.Url)
            };
        }

        [Test]
        public async Task Login_ShouldReject_SQLInjectionAttempt()
        {
            // Arrange
            var loginRequest = new LoginRequestDto
            {
                Email = "' OR 1=1 --",
                Password = "irrelevant"
            };

            // Act
            var response = await _httpClient.PostAsJsonAsync("/api/auth/login", loginRequest);

            // Assert
            Assert.That(response.StatusCode, Is.EqualTo(HttpStatusCode.Unauthorized));
        }

        [Test]
        public async Task Login_ShouldNotReveal_IfEmailOrPasswordWasIncorrect()
        {
            // Arrange
            var request = new LoginRequestDto
            {
                Email = "test@gmail.com",
                Password = "WrongPassword123"
            };

            // Act
            var response = await _httpClient.PostAsJsonAsync("/api/auth/login", request);

            // Assert
            Assert.That(response.StatusCode, Is.EqualTo(HttpStatusCode.Unauthorized));
        }

        [Test]
        public async Task Login_ShouldReturnBadRequest_WhenBodyIsMissing()
        {
            // Act
            var response = await _httpClient.PostAsync("/api/auth/login", null);

            // Assert
            Assert.That(response.IsSuccessStatusCode, Is.False);
        }

        [TearDown]
        public void TearDown()
        {
            _httpClient.Dispose();
        }
    }
}
